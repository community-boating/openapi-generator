openapi: 3.0.3
info:
  title: Simple API with JWT Auth
  version: 1.0.0
  description: A minimal OpenAPI spec with JWT authentication and simple models.

servers:
  - url: https://api.example.com

paths:
  /users/me/{id}/{test}:
    get:
      summary: Get current user
      description: Returns the details of the currently authenticated user.
      security:
        - staff: []
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
        - in: path
          name: test # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: Test
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTest'
        '401':
          description: Unauthorized
  /member/getNoParams:
    get:
      summary: Test
      description: Tests Post.
      responses:
        '200':
          description: All good
          content: 
            application/json:
              schema:
                $ref: './shared.yaml#/components/schemas/Boolean'
  /member/test:
    post:
      summary: Test
      description: Tests Post.
      security:
        - member: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestResponse'
        '401':
          description: Invalid credentials
  /balances:
    get:
      summary: Gets a list of balances for a specified person
      security:
        - staff: []
      tags:
        - Payment
      responses:
        '200':
          description: Successful fetch of balances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceDTO'
    post:
      summary: Gets a list of balances for a specified person
      security:
        - staff: []
      tags:
        - Payment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceDTO'
      responses:
        '200':
          description: Successful fetch of balances
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BalanceDTO'

  /ap-class/get-eligible/{personId}:
    get:
      summary: Get eligible classes
      description: Gets eligible class information for the supplied person_id
      security:
        - member: []
      parameters:
        - in: path
          name: personId # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The person id
      responses:
        '200':
          description: Successfully fetched classes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APEligibleClass'
        '204' :
          description: No classes to show
        '401' :
          description: Invalid credentials
        '403' :
          description: Invalid permissions

  /ap-class/get-future/{personId}:
    get:
      x-serve-example: true
      summary: Get eligible classes
      description: Gets eligible class information for the supplied person_id
      parameters:
        - in: path
          name: personId # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The person id
      responses:
        '200':
          description: Successfully fetched classes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APFutureClass'
        '204' :
          description: No classes to show
        '401' :
          description: Invalid credentials
        '403' :
          description: Invalid permissions

  /ap-class/enroll/{id}: #EVAN TEST CODE; AUDIT THOROUGHLY
    post:
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The class id
      #x-serve-example: true
      summary: Enroll person into class
      description: Posts person_id and class_instance_id
      security:
        - member: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APClassEnroll'
      responses:
        '202':
          description: TEST OK

  /orders/upsert:
    post:
      description: 'Updates or inserts order and subobjects into the database for further use in the order system'
      parameters: []
      security:
        - member: []
        - staff: []
      tags:
        -  CompassOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderDTO'
      responses:
        '200':
          description: Successfully updated/inserted order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithDiscountsDTO'
  /orders/cancel/{id}:
    post:
      description: 'Cancels an order, deleting if possible'
      parameters:
        - in: path
          name: id # Note the name is the same as in the path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The order ID
      tags:
        - CompassOrder
      responses:
        '200':
          description: Successfully cancelled the order
  /catalog:
    get:
      description: 'Gets the current catalog'
      tags:
        - Catalog
      responses:
        '200':
          description: Successfully gets the catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogDTO'
    post:
      description: 'Updates the current catalog'
      x-one-of-permissions:
        - 
          scope: admin
          type: ADMIN
      tags:
        - Catalog
      security:
        - staff: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogDTO'
      responses:
        '200':
          description: Successfully returns the updated catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogDTO'
  /classes/signup:
    post:
      description: 'Signs up for a class'
      security:
          - staff: []
          - member: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClassSignupRequestDTO'
      responses:
        '200':
          description: Successfully returns the updated catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassSignupResponseDTO'
components:
  securitySchemes:
    staff:
      type: http
      scheme: bearer
      bearerFormat: JWT
    member:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    BalanceTransactionDTO:
      required: [id, balanceId, transactionAmountCents]
      properties:
        assignId:
          type: integer
          format: int64
        balanceTransactionType:
          $ref: './shared.yaml#/components/schemas/BalanceTransactionType'
        paymentId:
          type: integer
          format: int64
        transactionAmountCents:
          type: integer
        purchasableState:
          $ref: './shared.yaml#/components/schemas/PurchasableState'
        lineItemId:
          type: integer
          format: int64
    BalanceDTO:
      required: [balanceCents, balanceType]
      properties:
        assignId:
          type: integer
          format: int64
        balanceAccountNumber:
          type: string
        balanceAccountToken:
          writeOnly: true
          type: string
          maxLength: 64
          minLength: 64
        balanceCents:
          type: integer
        balanceType:
          $ref: './shared.yaml#/components/schemas/BalanceType'
        balanceOwner:
          type: integer
        balanceTransactions:
          type: array
          items:
            $ref: '#/components/schemas/BalanceTransactionDTO'
    ClassSignupResponseDTO:
      type: object
      properties:
        classSignup:
          $ref: '#/components/schemas/PurchaseClassSignupDTO'
        errors:
          type: string
    ClassSignupRequestDTO:
      type: object
      properties:
        classSignup:
          $ref: '#/components/schemas/PurchaseClassSignupDTO'
        overrides:
          $ref: '#/components/schemas/ClassSignupOverrides'
    ClassSignupOverrides:
      type: object
      properties:
        overrideCanEnroll:
          type: boolean
        overrideClassStarted:
          type: boolean
        overrideClassCancelled:
          type: boolean
        typeOverride:
          type: string
          maxLength: 1
          minLength: 1
    ValidateLineItemOverrides:
      type: object
      properties:
        overrideValidPeople:
          type: boolean
        overrideTypeCheck:
          type: boolean
    CatalogDTO:
      type: object
      properties:
        assignId:
          type: integer
          format: int64
        startActive:
          type: string
          format: date-time
        endActive:
          type: string
          format: date-time
        catalogName:
          type: string
          maxLength: 200
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemDTO'
        taxes:
          type: array
          items:
            $ref: '#/components/schemas/CatalogTaxDTO'
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CatalogCategoryDTO'
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/CatalogDiscountDTO'
        products:
          type: array
          items:
            $ref: '#/components/schemas/CatalogProductDTO'
    CatalogTaxDTO:
      required: [taxName, taxRate, taxMinValueCents]
      properties:
        assignId:
          type: integer
          format: int64
        taxName:
          type: string
          maxLength: 200
        taxCode:
          type: string
          maxLength: 500
        taxRate:
          type: string
          maxLength: 200
        taxBeforeDiscount:
          type: boolean
        taxMinValueCents:
          type: integer
    CatalogCategoryDTO:
      properties:
        assignId:
          type: integer
          format: int64
        categoryName:
          type: string
          maxLength: 200
        description:
          type: string
          maxLength: 500
    CatalogDiscountDTO:
      required: [discountId]
      properties:
        discountId:
          type: integer
        discountName:
          type: string
          maxLength: 100
        instances:
          type: array
          items:
            $ref: '#/components/schemas/CatalogDiscountInstanceDTO'
    CatalogDiscountInstanceDTO: 
      properties:
        discountType:
          $ref: './shared.yaml#/components/schemas/DiscountType'
        instanceId:
          type: integer
        amountCents:
          type: integer
        percent:
          type: string
        autoApply:
          type: boolean
        isGlobal:
          type: boolean
        isSpecial:
          type: boolean
        startActive:
          type: string
          format: date-time
        endActive:
          type: string
          format: date-time
    CatalogItemInstanceDTO:
      type: object
      properties:
        assignId:
          type: integer
          format: int64
        priceCents:
          type: integer
          example: 12
        startActive:
          type: string
          format: date-time
        endActive:
          type: string
          format: date-time
    CatalogItemDTO:
      required: [type]
      properties:
        assignId:
          type: integer
          format: int64
        itemType:
          nullable: false
          $ref: './shared.yaml#/components/schemas/ItemType'
        classTypeId:
          nullable: true
          type: integer
        membershipTypeId:
          nullable: true
          type: integer
        productId:
          nullable: true
          type: integer
        itemName:
          nullable: true
          type: string
          maxLength: 200
        itemDescription:
          nullable: true
          type: string
          maxLength: 500
        imageURL:
          nullable: true
          type: string
          maxLength: 200
        maxQuantity:
          type: integer
        minQuantity:
          type: integer
        allowPriceOverride:
          type: boolean
        itemInstances:
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemInstanceDTO'
        itemDiscounts:
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemDiscountDTO'
        itemTaxes:
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemTaxDTO'
        itemCategories:
          type: array
          items:
            $ref: '#/components/schemas/CatalogItemCategoryDTO'
    CatalogItemDiscountDTO:
      properties:
        assignId:
          type: integer
          format: int64
        discountType:
          $ref: './shared.yaml#/components/schemas/DiscountType'
        amountCents:
          type: integer
        percent:
          type: string
        discountId:
          type: integer
    CatalogItemTaxDTO:
      properties:
        assignId:
          type: integer
          format: int64
        taxId:
          type: integer
          format: int64

    CatalogItemCategoryDTO:
      required: [categoryId]
      properties:
        assignId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
    CatalogProductDTO:
      required: [productName, productDescription, active]
      properties:
        assignId:
          type: integer
          format: int64
        productName:
          type: string
          maxLength: 200
        productDescription:
          type: string
          maxLength: 500
        active:
          type: boolean
    CatalogSubscriptionDTO:
      required: [name, billingCycle]
      properties:
        assignId:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 200
        billingCycle:
          type: string
          maxLength: 50
        items:
          type: array
          items:
            $ref: '#/components/schemas/CatalogSubscriptionItemDTO'
    CatalogSubscriptionItemDTO:
      required: [itemId]
      properties:
        assignId:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
        cyclePriceOverrideCents:
          type: integer
    OrderWithDiscountsDTO:
      type: object
      properties:
        order:
          $ref: '#/components/schemas/OrderDTO'
        availableDiscounts:
          type: array
          items:
            $ref: '#/components/schemas/LineItemAvailableDiscount'
    LineItemAvailableDiscount:
      type: object
      properties:
        lineItemId:
          type: integer
          format: int64
        discountId:
          type: integer
    
    OrderDTO:
      type: object
      required: [lineItems, orderNum]
      properties:
        assignId:
          nullable: true
          type: integer
          format: int64
          example: 12
        orderComputedCents:
          type: integer
          example: 1222
          readOnly: true
        orderAmountPaid:
          type: integer
          example: 122
          readOnly: true
        status:
          $ref: './shared.yaml#/components/schemas/OrderStatusNew'
          readOnly: true
        personId:
          type: integer
          example: 12
        lineItems:
          type: array
          items:
            $ref: '#/components/schemas/LineItemDTO'
        appliedTaxes:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/OrderTaxDTO'
        orderPayments:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/OrderPaymentDTO'
    OrderPaymentDTO:
      type: object
      properties:
        assignId:
          type: integer
          format: int64
        paymentType:
          nullable: false
          $ref: './shared.yaml#/components/schemas/PaymentType'
        paymentAmountCents:
          nullable: false
          type: integer
        paymentStatus:
          nullable: false
          $ref: './shared.yaml#/components/schemas/PaymentStatus'
        paymentDueDate:
          nullable: true
          type: string
          format: date-time

    StripeTransactionDTO:
      required: [id, stripePaymentIntent, transactionAmountCents]
      properties:
        assignId:
          type: integer
          format: int64
        transactionType:
          $ref: './shared.yaml#/components/schemas/StripeTransactionType'
        stripePaymentIntent:
          type: string
          maxLength: 500
        transactionAmountCents:
          type: integer
    OrderTaxDTO:
      type: object
      properties:
        assignId:
          type: integer
          format: int64
        taxId:
          type: integer
          format: int64
        taxAmountCents:
          type: integer
    LineItemDTO:
      type: object
      properties:
        assignId:
          nullable: false
          type: integer
          format: int64
        parentItemId:
          type: integer
          format: int64
        itemInstanceId:
          type: integer
          format: int64
          nullable: false
        subscriptionId:
          nullable: true
          type: integer
          format: int64
        amountSpecifiedCents:
          readOnly: true
          type: integer
        amountBaseCents:
          readOnly: true
          type: integer
        amountAfterDiscountCents:
          readOnly: true
          type: integer
        classSignup:
          nullable: true
          $ref: '#/components/schemas/PurchaseClassSignupDTO'
        membership:
          nullable: true
          $ref: '#/components/schemas/PurchaseMembershipDTO'
        donation:
          nullable: true
          $ref: '#/components/schemas/PurchaseDonationDTO'
        card:
          nullable: true
          $ref: '#/components/schemas/PurchaseCardDTO'
        giftCard:
          nullable: true
          $ref: '#/components/schemas/PurchaseGiftCardDTO'
        guestPrivs:
          nullable: true
          $ref: '#/components/schemas/PurchaseGuestPrivilegesDTO'
        damageWaiver:
          nullable: true
          $ref: '#/components/schemas/PurchaseDamageWaiverDTO'
        stockChange:
          nullable: true
          $ref: '#/components/schemas/PurchaseStockedItemDTO'
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/LineItemDiscountDTO'
    LineItemDiscountDTO:
      properties:
        assignId:
          nullable: false
          type: integer
          format: int64
        discountInstanceId:
          nullable: false
          type: integer
        discountType:
          $ref: './shared.yaml#/components/schemas/DiscountType'
        specifiedCents:
          type: integer
        specifiedPercent:
          type: string
        calculatedCents:
          type: integer
    PurchaseStockedItemDTO:
      properties:
        assignId:
          type: integer
          format: int64
        itemInstanceId:
          type: integer
          format: int64
        quantity:
          type: integer
        changeType:
          readOnly: true
          $ref: './shared.yaml#/components/schemas/StockChangeType'
        purchasableState:
          readOnly: true
          $ref: './shared.yaml#/components/schemas/PurchasableState'
    PurchaseDamageWaiverDTO:
      required: [personId]
      properties:
        waiverId:
          type: integer
        personId:
          type: integer
        startDate:
          type: string
          format: date
        purchasableState:
          readOnly: true
          $ref: './shared.yaml#/components/schemas/PurchasableState'
    PurchaseGuestPrivilegesDTO:
      properties:
        assignId:
          type: integer
          format: int64
        membershipId:
          type: integer
        startDate:
          type: string
          format: date
        purchasableState:
          readOnly: true
          $ref: './shared.yaml#/components/schemas/PurchasableState'
    PurchaseClassSignupDTO:
      required: [instanceId, personId]
      properties:
        signupId:
          nullable: false
          type: integer
        signupType:
          readOnly: true
          nullable: false
          type: string
          minLength: 1
          maxLength: 1
        instanceId:
          readOnly: true
          nullable: false
          type: integer
        price:
          readOnly: true
          type: integer
        classType:
          nullable: false
          $ref: './shared.yaml#/components/schemas/ClassType'
        personId:
          nullable: false
          type: integer
        purchasableState:
          readOnly: true
          $ref: './shared.yaml#/components/schemas/PurchasableState'
    PurchaseMembershipDTO:
      required: [membershipTypeId, personId]
      properties:
        assignId:
          nullable: false
          type: integer
        membershipTypeId:
          nullable: false
          type: integer
        personId:
          nullable: false
          type: integer
        startDate:
          nullable: true
          type: string
          format: date
        purchaseDate:
          nullable: true
          readOnly: true
          type: string
          format: date
        expirationDate:
          nullable: true
          readOnly: true
          type: string
          format: date
        price:
          readOnly: true
          type: integer
        purchasableState:
          readOnly: true
          allOf:
            - $ref: './shared.yaml#/components/schemas/PurchasableState'
    PurchaseDonationDTO:
      required: [fundId, initiativeId, state]
      properties:
        donationId:
          nullable: false
          type: integer
        fundId:
          type: integer
        donationDate:
          type: string
          format: date-time
        initiativeId:
          type: integer
        inMemoryOf:
          nullable: true
          type: string
        isMatch:
          nullable: true
          type: boolean
        inKind:
          nullable: true
          type: boolean
        personId:
          nullable: false
          type: integer
        amount:
          readOnly: true
          type: number
          format: double
        purchasableState:
          readOnly: true
          $ref: './shared.yaml#/components/schemas/PurchasableState'
    PurchaseCardDTO:
      required: [cardNum]
      properties:
        personId:
          type: integer
        assignId:
          type: integer
        cardNum:
          type: string
        active:
          readOnly: true
          type: boolean
        purchasableState:
          readOnly: true
          $ref: './shared.yaml#/components/schemas/PurchasableState'
    PurchaseGiftCardDTO:
      properties:
        assignId:
          type: integer
          format: int64
        personId:
          type: integer
        cardNum:
          type: string
        balance:
          $ref: '#/components/schemas/BalanceDTO'
        transactionAmountCents:
          type: integer
        purchasableState:
          readOnly: true
          $ref: './shared.yaml#/components/schemas/PurchasableState'
    
    PersonSubscriptionDTO:
      required: [id, personId, subscriptionId, billingCycle]
      properties:
        assignId:
          type: integer
          format: int64
        personId:
          type: integer
        subscriptionId:
          type: integer
          format: int64
        billingDate:
          type: string
          format: date
        billingCycle:
          type: string
          maxLength: 50

    UserTest:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: user@example.com
        fullName:
          type: string
          example: John Doe
    TestRequest:
      type: object
      properties:
        derply:
          type: integer
          example: 1
        capacity:
          type: string
        dateTestReq:
          type: string
          format: date
        dateTimeTestReq:
          type: string
          format: date-time
    TestResponse:
      type: object
      properties:
        internalDiameter:
          type: integer
          example: 1
        dateTest:
          type: string
          format: date
        dateTimeTest:
          type: string
          format: date-time
    APEligibleClass:
      type: object
      properties:
        instanceId:
          type: integer
          example: 117
        typeName:
          type: string
          example: Intermediate 2
        sessionCount:
          type: integer
          example: 2
        sessionDates:
          type: array
          example: [01-APR-2010, 02-APR-2010]
          items:
            type: string
            format: date
        signupsAvailable:
          type: boolean
          example: T
        nextSignupsOpen:
          type: string
          format: date-time
        nextSignupsCount:
          type: integer
          example: 10
        instructor:
          type: string
          example: Joe L.
        location:
          type: string
          example: Dockhouse 
        booleanEnumTest:
          $ref: './shared.yaml#/components/schemas/Boolean'
          example: 'T'
    APFutureClass:
      type: object
      properties:
        enumTest:
          $ref: "./shared.yaml#/components/schemas/EnumTest"
          example: 'A'
        instanceId:
          type: integer
          example: 117
        typeName:
          type: string
          example: Intermediate 2
        sessionCount:
          type: integer
          example: 2
        sessionDates:
          type: array
          example: [01-APR-2010, 02-APR-2010]
          items:
            type: string
            format: date
        sessionLengthMinutes:
          type: integer
          example: 120
        signupsAvailable:
          type: boolean
          example: Y
        nextSignupsOpen:
          type: string
          format: date-time
        nextSignupsCount:
          type: integer
          example: 10
        instructor:
          type: string
          example: Joe L.
        location:
          type: string
          example: Dockhouse 
    APClassEnroll:
      type: object
      properties:
        personId:
          type: integer
          example: 192535
        instanceId:
          type: integer
          example: 117